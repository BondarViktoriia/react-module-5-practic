{"version":3,"file":"static/js/7.e3bf8a63.chunk.js","mappings":"qMAAaA,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACjC,OACE,0BACE,kBACEC,KAAK,OACLF,MAAOA,EACPC,SAAU,SAAAE,GAAC,OAAIF,EAASE,EAAEC,OAAOJ,MAAtB,KAIlB,E,mCCiCD,EApCkB,WAAO,IAAD,EACtB,GAAkCK,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACQC,EAAW,UAAGF,EAAaG,IAAI,iBAApB,QAAiC,GAC5CC,GAAWC,EAAAA,EAAAA,OAEnBC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAeC,KAAKV,EACrB,GAAE,IAEH,IAIMW,GAAmBC,EAAAA,EAAAA,UAAQ,WAC/B,OAAOb,EAAUc,QAAO,SAAAC,GAAQ,OAC9BA,EAASC,KAAKC,cAAcC,SAASb,EAAYY,cADnB,GAGjC,GAAE,CAACjB,EAAWK,IAEf,OACE,6BACE,SAACZ,EAAD,CAAWC,MAAOW,EAAaV,SAZd,SAAAD,GACnBU,EAA0B,KAAVV,EAAe,CAAEoB,OAAQpB,GAAU,CAAC,EACrD,IAWIkB,EAAiBO,OAAS,IACzB,wBACGP,EAAiBQ,KAAI,SAAAL,GAAQ,OAC5B,yBACH,UAAC,KAAD,CAAMM,GAAE,UAAKN,EAASO,IAAMC,MAAO,CAACC,KAAKjB,GAAzC,UAAqDQ,EAASC,KAA9D,QADYD,EAASO,GADU,QASvC,C","sources":["components/SearchBox.js","pages/Customers.js"],"sourcesContent":["export const SearchBox = ({ value, onChange }) => {\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={value}\n        onChange={e => onChange(e.target.value)}\n      />\n    </div>\n  );\n};\n","import { SearchBox } from 'components/SearchBox';\nimport { getCustomers } from 'Api';\nimport { useMemo } from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport {  useSearchParams,Link, useLocation } from 'react-router-dom';\n\nconst Customers = () => {\n  const [customers, setCustomers] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n    const filterParam = searchParams.get('filter') ?? '';\n    const location = useLocation();\n\n  useEffect(() => {\n    getCustomers().then(setCustomers);\n  }, []);\n\n  const changeFilter = value => {\n    setSearchParams(value !== '' ? { filter: value } : {});\n  };\n\n  const visibleCustomers = useMemo(() => {\n    return customers.filter(customer =>\n      customer.name.toLowerCase().includes(filterParam.toLowerCase())\n    );\n  }, [customers, filterParam]);\n\n  return (\n    <main>\n      <SearchBox value={filterParam} onChange={changeFilter} />\n      {visibleCustomers.length > 0 && (\n        <ul>\n          {visibleCustomers.map(customer => (\n            <li key={customer.id}>\n         <Link to={`${customer.id}`} state={{from:location}}>{customer.name} </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </main>\n  );\n};\n\nexport default Customers;\n"],"names":["SearchBox","value","onChange","type","e","target","useState","customers","setCustomers","useSearchParams","searchParams","setSearchParams","filterParam","get","location","useLocation","useEffect","getCustomers","then","visibleCustomers","useMemo","filter","customer","name","toLowerCase","includes","length","map","to","id","state","from"],"sourceRoot":""}